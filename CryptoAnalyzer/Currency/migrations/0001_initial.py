# Generated by Django 3.2.9 on 2021-11-24 04:56

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.TextField(unique=True)),
                ('min_size', models.DecimalField(decimal_places=10, max_digits=20)),
                ('name', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('low_rate', models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20)),
                ('high_rate', models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20)),
                ('open_rate', models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20)),
                ('close_rate', models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20)),
                ('volume', models.DecimalField(decimal_places=10, default=Decimal('0'), max_digits=20)),
                ('source', models.TextField(default='system')),
                ('from_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idfrom', to='Currency.currency')),
                ('to_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idto', to='Currency.currency')),
            ],
        ),
        migrations.AddIndex(
            model_name='rate',
            index=models.Index(fields=['timestamp'], name='Currency_ra_timesta_13b9aa_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rate',
            unique_together={('from_currency', 'to_currency', 'timestamp', 'source')},
        ),
    ]
